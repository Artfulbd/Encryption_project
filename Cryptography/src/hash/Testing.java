package hash;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;

public class Testing {

	public static String encryptThisString(String input) 
	{ 
		try { 
			// getInstance() method is called with algorithm SHA-1 
			MessageDigest md = MessageDigest.getInstance("SHA-1"); 

			// digest() method is called 
			// to calculate message digest of the input string 
			// returned as array of byte 
			byte[] messageDigest = md.digest(input.getBytes()); 

			// Convert byte array into signum representation 
			BigInteger no = new BigInteger(1, messageDigest); 
			// Convert message digest into hex value 
			String hashtext = no.toString(16); 

			// Add preceding 0s to make it 32 bit 
			while (hashtext.length() < 32) { 
				hashtext = "0" + hashtext; 
			} 

			// return the HashText 
			return hashtext; 
		} 

		// For specifying wrong message digest algorithms 
		catch (NoSuchAlgorithmException e) { 
			throw new RuntimeException(e); 
		} 
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("HashCode Generated by SHA-1 for: "); 

		String s1 = "Shipuu"; 
		System.out.println("\n" + s1 + " : " + encryptThisString(s1)); 

		String s2 = "hello world"; 
		System.out.println("\n" + s2 + " : " + encryptThisString(s2)); 
		
		/*System.out.print("Enter path with file name: ");
		//String fileLoc = new Scanner(System.in).nextLine();
		String fileLoc = "C:\\Users\\Artful\\Desktop\\Testing.docx";
		//String fileLoc = "C:\\Users\\Artful\\Desktop\\Lecture.pdf";
		System.out.println(fileLoc);
		String digest = shaOne(fileLoc);
		if(digest.length() == 0) {
			System.out.println("Specified file doesn't exist..!");
		}
		else {
			System.out.println("SHA-1: "+digest);
			storeIt(fileLoc, digest);
		}*/
		
	}
	public static String shaOne(String fileWithDir){
		String hashtext = "";
		try { 
			File file = new File(fileWithDir);
			if(file.exists()) {
				MessageDigest md = MessageDigest.getInstance("SHA-1"); 
				InputStream fis = new FileInputStream(file);
				//fis.toString();
				
				
				/*byte[] data = new byte[1024];
		        int read = 0; 
		        while ((read = fis.read(data)) != -1) {
		            md.update(data, 0, read);
		        }*/
				//System.out.println("toString:"+fis.toString());
				//System.out.println("Bytes:"+fis.readAllBytes().toString());
				byte[] digests = fis.readAllBytes();
				
				System.out.println(digests);
				byte[] digest = md.digest(digests);
				//byte[] digest = md.digest(fis.readAllBytes());
				fis.close();
				BigInteger no = new BigInteger(1, digest); 
				hashtext = no.toString(16); 
				System.out.println(hashtext);
				// Add preceding 0s to make it 32 bit 
				while (hashtext.length() < 32) { 
					hashtext = "0" + hashtext; 
				}
			}
		}catch (Exception e) {} 
		return hashtext;
	}

	public static boolean storeIt(String raw, String hashData)
	{
		boolean success;
		try {

			File file = new File("hvalue.txt");
			file.createNewFile();
			PrintWriter writer = new PrintWriter(file);
			writer.println("File:-->> "+raw+"\nDigest->> "+hashData);
			writer.close();
			success = true;
		} catch (IOException e) { success = false; }
		return success;
	}

}
